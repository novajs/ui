/**
 * API Library for TritonJS.
 *
 * @author Jared Allard <jaredallard@outlook.com>
 * @version 1.0.0
 * @license MIT
 **/
"use strict";function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},_createClass=function(){function e(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(o,t,n){return t&&e(o.prototype,t),n&&e(o,n),o}}(),Triton=function(){function e(o){_classCallCheck(this,e),"object"===_typeof(window.API_CONFIG)&&(this.url=window.API_CONFIG.host.replace(/\/$/g,"")+"/v"+window.API_CONFIG.version,console.log("TRITON: #API_CONFIG ->",this.url)),this.$=o||$,console.log("Triton API initialized.")}return _createClass(e,[{key:"request",value:function(e,o,t){var n=this;t||(t={});var r=this.url+"/"+o;return new Promise(function(a,c){console.log("TRITON:",e.toUpperCase(),r);var i={url:r,method:e,headers:{Authentication:$.cookie("triton_userapikey")},cache:!1,success:function(e){return e.success?(e=e.data,n.setCache(o,e),a(e)):console.error("API Reported Error",e)},failure:function(e,o,t){return console.error(n.url,o,t.toString()),c(t)}};"get"!==e&&(console.log("triton: modifying reqopts to use JSON as data."),i.data=t,i.dataType="json"),n.$.ajax(i)})}},{key:"post",value:function(e,o){}},{key:"get",value:function(e,o){return this.request("get",e,o)}},{key:"setCache",value:function(e,o){console.log("TRITON: CACHED ->",e);var t=JSON.stringify(o);localStorage.setItem("cached_endpoint_"+encodeURIComponent(e),t)}},{key:"getCache",value:function(e){return console.log("TRITON: USE CACHE ->",e),new Promise(function(o,t){var n=localStorage.getItem("cached_endpoint_"+encodeURIComponent(e)),r=JSON.parse(n);return o(r)})}},{key:"invalidateCache",value:function(e){localStorage.removeItem("cached_endpoint_"+encodeURIComponent(e))}},{key:"isCached",value:function(e){return!!localStorage.getItem("cached_endpoint_"+encodeURIComponent(e))}}]),e}();